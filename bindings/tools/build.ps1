# --------------------
# Resources auto build - Alibaba CRM
# (c) Kingcean Tuan, 2015.
#
# File  build.ps1
# Description  A tool to build client resources to target directory.
# Owner  Kingcean Tuan <kingcean@live.com>
# --------------------  */

$resModule = "AliHub.Res"
$rootPath = "."
$genDir = "\src\generated\"

Function GetCert()
{
    $certificate=ls cert:\CurrentUser\Root | where {$_.subject -eq "CN=King Signature for Alibaba"}
    return $certificate

    #Set-AuthenticodeSignature .\tools\build.ps1 $certificate
}

Function GetFiles([string]$dir, [string[]]$format)
{
    $files = Get-ChildItem $dir
    [System.IO.FileInfo[]]$output = @()
    foreach ($file in $files)
    {
        if (!$file -is [System.IO.FileInfo]) { continue }
        $toPass = 0
        foreach ($ext in $format)
        {
            if ($file.Extension -eq $ext -or $file.Extension -eq "." + $ext) {
                $toPass = 1
                break
            }
        }

        if ($toPass -eq 0) { continue }
        $output += $file
    }

    return $output
}

Function FileToJsonStr([string]$path)
{
    $raw = Get-Content $path
    $str = """" + $raw.Replace("\","\\").Replace("""","\""") + """"
    return $str
}

Function BatchFileToTypeScript([string]$dir, [string[]]$format, [string]$resName, [string]$module, [string]$outputDir, [string]$fileName)
{
    $str =  ""
    $outFile = $outputDir + $resName + ".ts"
    if (-not ($fileName -eq $null -or $fileName -eq "")) {
        $outFile = $outputDir + $fileName + ".ts.tmp"
        $str = Get-Content $outFile
        $str += [System.Environment]::NewLine
    }

    $files = GetFiles $dir $format
    foreach ($file in $files)
    {
        $propN = $file.Name.Replace($file.Extension, "")
        $propV = FileToJsonStr $file.Fullname
        $str += $module + "." + $resName + "(""" + $propN + """, " + $propV + ");" + [System.Environment]::NewLine
    }

    $str | Out-File $outFile
}

Function SaveFile([string]$dir, [string]$fileName)
{
    $path = $dir + $fileName
    $tempName = $path + ".tmp"
    Get-Content $tempName | Out-File $path
    "" | Out-File $tempName
}

Function BuildTypeScript([string]$outDir, [string]$outFile, [string]$inDir, [string[]]$inFile)
{
    $inFiles = @()
    $inStr = ""
    foreach ($file in $inFile)
    {
        $filePath = $inDir + $file + ".ts"
        $inFiles += $filePath
        $inStr += " " + $filePath
    }

    if ($inStr -eq "") { return }
    
    $outputFile = $outDir + $outFile + ".js"
    tsc --module amd --target ES5 --out $outputFile $inFiles
}

# Business Logic

Function GenCode([string]$inFolder, [string]$type, [string[]]$format, [string]$fileName)
{
    $inDir = "$rootPath\src" + $inFolder
    if (-not (Test-Path $inDir)) {
        return
    }

    $genFileDir = $rootPath + $genDir
    BatchFileToTypeScript $inDir $format $type "template" $genFileDir $fileName
    Write-Host "Client scripts: Codes generated. ($type)"
}

Function GenComments()
{
    $str = "/**" + [System.Environment]::NewLine + "  * Generated by tool - Please do not modify!" + [System.Environment]::NewLine + "  * Support & tool owner  Kingcean Tuan <kingcean@live.com>" + [System.Environment]::NewLine + " */" + [System.Environment]::NewLine
    return $str
}

Function GenModule()
{
    $outPath = $rootPath + $genDir + "templates.ts.tmp"

    $str = GenComments
    $str += [System.Environment]::NewLine + "export = Main;" + [System.Environment]::NewLine + "module Main {" + [System.Environment]::NewLine
    $str += "export function template(template: " + $resModule + ".Templates) {" + [System.Environment]::NewLine
    $str += Get-Content $outPath
    $str += [System.Environment]::NewLine + "return template;" + [System.Environment]::NewLine + "}"
    $str += [System.Environment]::NewLine + "}"

    $str | Out-File $outPath
}

Function BuildTsFile([string[]]$format)
{
    $outFile = "templates"
    $genFileDir = $rootPath + $genDir
    BuildTypeScript "$rootPath\src\scripts\" "templates" $genFileDir $format
    Write-Host "Client scripts: Type script file build completed. ($outFile.js)"
}

Function SaveTempFile()
{
    $genFileDir = $rootPath + $genDir
    SaveFile $genFileDir "templates.ts"
}

Function EmptyTempFile()
{
    $genFilePath = $rootPath + $genDir + "templates.ts.tmp"
    "" | Out-File $genFilePath
}

# Exec

EmptyTempFile
GenCode "\svg\" "svg" ("svg") "templates"
GenCode "\templates\" "html" ("html", "htm") "templates"
GenModule
SaveTempFile


# SIG # Begin signature block
# MIIFrwYJKoZIhvcNAQcCoIIFoDCCBZwCAQExCzAJBgUrDgMCGgUAMGkGCisGAQQB
# gjcCAQSgWzBZMDQGCisGAQQBgjcCAR4wJgIDAQAABBAfzDtgWUsITrck0sYpfvNR
# AgEAAgEAAgEAAgEAAgEAMCEwCQYFKw4DAhoFAAQUUx57vDSTfvJwN87Apey9XrXF
# vdagggM/MIIDOzCCAiegAwIBAgIQDS+bT70PDZ5CwkvBATsgpDAJBgUrDgMCHQUA
# MCUxIzAhBgNVBAMTGktpbmcgU2lnbmF0dXJlIGZvciBBbGliYWJhMB4XDTE1MDEz
# MDA4MzMyNFoXDTM5MTIzMTIzNTk1OVowJTEjMCEGA1UEAxMaS2luZyBTaWduYXR1
# cmUgZm9yIEFsaWJhYmEwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCK
# D4QzS8PrpH4AlJZIAIa73F3NMs03/m3WLDpSavrqio7QumAC9kAmGeZRUBfn3ma5
# dfcKIeUPob5WBoEHfzO3Syi6bV7O17wjDsjJboeOFECi+9ZAcXgpqbVrH9RdrKJ3
# l/oxnfhx9OGBnhBx19BRpAnYmZk6VMb1SDTkdzqCLy/BEVCEG9WtuZJTie4DPRAa
# bsZJHn28FjlhmSHWZJDPrG34TClQLi4c0Zjemq8GfSTd2io1Pcee4CXTcp7dLrxn
# tkm83KZa8o5I2wCFgUII9Zl0IFYpLyk4XSgVdNa2Rtli+tCffvZlFqkspPiY7Ldn
# J52lHkfUB+G9rHcS0jBlAgMBAAGjbzBtMBMGA1UdJQQMMAoGCCsGAQUFBwMDMFYG
# A1UdAQRPME2AEJM+gAZfL8L7LTdmtOo5f3+hJzAlMSMwIQYDVQQDExpLaW5nIFNp
# Z25hdHVyZSBmb3IgQWxpYmFiYYIQDS+bT70PDZ5CwkvBATsgpDAJBgUrDgMCHQUA
# A4IBAQAzcawvuGar2si+7fJPWU1JTQZF8jhbviZWvYkRdFPthuU7mZ/Fux4pgPiU
# oi6aF5wgtjXZ+NzXG/QBNzGIYvXpL9vSQlUM2dL+2j+Dz80FyU/BjuXmdB0fNBqH
# op27TGezwdmGAyi0mIVp4WKxkje3c+KtulQxwvvm8YvAlZl/sLv7YacIf2ccHZvs
# nb4M4g/KU5cestkA5maJBTW/Pr7dtTXUDkb3k13yj4ljZWb3yDXBzgmibz3pP9x0
# Lh8N6LIDU5V1Q00mX+f1SYjpGU2GqkpuZdtj0eDBafzo6LIQMgjMk4tiafOAt3eb
# cbCGiuzktYRoTwf+cTwR5o1HPzFgMYIB2jCCAdYCAQEwOTAlMSMwIQYDVQQDExpL
# aW5nIFNpZ25hdHVyZSBmb3IgQWxpYmFiYQIQDS+bT70PDZ5CwkvBATsgpDAJBgUr
# DgMCGgUAoHgwGAYKKwYBBAGCNwIBDDEKMAigAoAAoQKAADAZBgkqhkiG9w0BCQMx
# DAYKKwYBBAGCNwIBBDAcBgorBgEEAYI3AgELMQ4wDAYKKwYBBAGCNwIBFTAjBgkq
# hkiG9w0BCQQxFgQU0TigR1ZF3bO1PjYwngv7kMyCqCkwDQYJKoZIhvcNAQEBBQAE
# ggEAZHvWq+Yvt3MTI1oTrJz0JJw5FJFT4CmB2rdP8kwRwy0dfP8hY/uDD9b4uZQv
# 9JCjcIjIkgbVsFzSj0Sz9+gMe0qr80qJUet6BGaWW99SMIMZ6aJIUiowfjLSvKgH
# kTQ/8EqC4orP9iPZb0od430Q4LS5DIoOTH8dbKto39D9GfO0tEA0Yc6LEhpjuie1
# cWJfdFoQqb1927JIDvTHgr+kfQJEEHCGpYxdXgcJORyUVjaXeDUTCoYL+ywJ1GUv
# ru+fQjDbr8xjqdNMIcCcYHXEk4Q0GMHKxic5jfX74s8nwuZe/S9ADxdWiEgng2Vl
# LFzAhHNgrWVqwx4Ux71CAz5eZw==
# SIG # End signature block
